<UserControl
    x:Class="x_template_xPlc.NotificationPanelView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="clr-namespace:x_template_xHmi.Wpf.Properties"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:plc="clr-namespace:x_template_xPlc"
    mc:Ignorable="d"
    d:DesignHeight="1500"
    d:DesignWidth="1500">
    <d:UserControl.DataContext>
        <plc:NotificationPanelViewModel/>
    </d:UserControl.DataContext>
    <UserControl.Resources>
        <plc:BadgeConverter x:Key="BadgeConverter"/>

        <Style x:Key="icon" TargetType="materialDesign:PackIcon">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Foreground" Value="{DynamicResource OnPrimary}"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="iconContainer" TargetType="Border">
    
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="BorderBrush" Value="{StaticResource OnPrimary}" />
            <Setter Property="BorderThickness" Value="3"></Setter>
            <Setter Property="CornerRadius" Value="3"/>
        </Style>

        

        <Style x:Key="badge" TargetType="Border">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="CornerRadius" Value="30"/>
            <Setter Property="Margin" Value="0,-35,0,0"/>

            <Setter Property="Background" Value="{DynamicResource Alert}"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>

        <Style x:Key="badgeText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Black" />
        </Style>

    </UserControl.Resources>

    <Grid>
        <materialDesign:Card  materialDesign:ShadowAssist.ShadowDepth="Depth2" Padding="1.5"  Background="{DynamicResource Primary}" >

            <Expander x:Name="NotificationExpander" 
                      Background="{StaticResource Primary}" Foreground="{StaticResource OnPrimary}"
            ExpandDirection="Right">
                <Expander.Header>
                    <StackPanel >
                        <Border  Visibility="{Binding Component._badgeValue.Cyclic, Converter={StaticResource BadgeConverter}}" Style="{StaticResource badge}">
                            <TextBlock Text="{Binding Component._badgeValue.Cyclic}" Style="{StaticResource badgeText}" />
                            
                        </Border>
                        <!--Visibility="{Binding ElementName=NotificationExpander, Path=IsExpanded ,Converter={plc:BoolToVisibilityConverter}, ConverterParameter=true}"-->
                        <ListView   Margin="10"  ScrollViewer.HorizontalScrollBarVisibility="Auto" >


                            <ListViewItem Height="60" >
                                <StackPanel Orientation="Horizontal" >
                                    <Border  x:Name="ControlVoltageBorder" Style="{StaticResource iconContainer}" Background="{Binding Component._notificationPanelSignals.ControlVoltage.Cyclic,Converter={plc:BooleanToBrushConverter}}">
                                        <materialDesign:PackIcon Kind="Power" Style="{StaticResource icon}"/>
                                    </Border>

                                </StackPanel>
                            </ListViewItem>


                            <ListViewItem Height="60">
                                <StackPanel Orientation="Horizontal">
                                    <Border  Background="{Binding Component._notificationPanelSignals.AirPressure.Cyclic,Converter={plc:BooleanToBrushConverter}}"  Style="{StaticResource iconContainer}">
                                        <materialDesign:PackIcon Kind="OxygenTank" Style="{StaticResource icon}"/>
                                    </Border>

                                </StackPanel>
                            </ListViewItem>



                            <ListViewItem Height="60">
                                <StackPanel Orientation="Horizontal">
                                    <Border Background="{Binding Component._notificationPanelSignals.EmergencyStop.Cyclic,Converter={plc:BooleanToBrushInvertedConverter}}"  Style="{StaticResource iconContainer}">
                                        <materialDesign:PackIcon Kind="Alert" Style="{StaticResource icon}"/>
                                    </Border>

                                </StackPanel>
                            </ListViewItem>




                            <ListViewItem  Height="60">
                                <StackPanel Orientation="Horizontal" >
                                    <Border Background="{Binding Component._notificationPanelSignals.SafetyDoorOk.Cyclic,Converter={plc:BooleanToBrushConverter}}"  Style="{StaticResource iconContainer}">
                                        <materialDesign:PackIcon Kind="ShieldCheck" Style="{StaticResource icon}"/>
                                    </Border>

                                </StackPanel>
                            </ListViewItem>


                            <ListViewItem Height="60">
                                <StackPanel Orientation="Horizontal">
                                    <Border Background="{Binding Component._notificationPanelSignals.DoorClosed.Cyclic,Converter={plc:BooleanToBrushConverter}}"  Style="{StaticResource iconContainer}">
                                        <materialDesign:PackIcon Kind="Door" Style="{StaticResource icon}"/>
                                    </Border>

                                </StackPanel>
                            </ListViewItem>



                            <ListViewItem Height="60">
                                <StackPanel Orientation="Horizontal">
                                    <Border Background="{Binding Component._notificationPanelSignals.DoorLocked.Cyclic,Converter={plc:BooleanToBrushConverter}}" Style="{StaticResource iconContainer}">
                                        <materialDesign:PackIcon Kind="DoorClosedLock" Width="Auto" Style="{StaticResource icon}"/>
                                    </Border>

                                </StackPanel>
                            </ListViewItem>



                            <ListViewItem Height="60">
                                <StackPanel Orientation="Horizontal">
                                    <Border Background="{Binding Component._notificationPanelSignals.AutomatAllowed.Cyclic,Converter={plc:BooleanToBrushConverter}}"  Style="{StaticResource iconContainer}">
                                        <materialDesign:PackIcon Kind="RunFast" Style="{StaticResource icon}"/>
                                    </Border>

                                </StackPanel>
                            </ListViewItem>



                            <ListViewItem Height="60">
                                <StackPanel Orientation="Horizontal">
                                    <Border Background="{Binding Component._notificationPanelSignals.ProcessDataOk.Cyclic,Converter={plc:BooleanToBrushConverter}}"  Style="{StaticResource iconContainer}">
                                        <materialDesign:PackIcon Kind="ClipboardCheckOutline" Style="{StaticResource icon}"/>
                                    </Border>

                                </StackPanel>
                            </ListViewItem>


                            <ListViewItem Height="60">
                                <StackPanel Orientation="Horizontal">
                                    <Border Background="{Binding Component._notificationPanelSignals.TechnologyDataOk.Cyclic,Converter={plc:BooleanToBrushConverter}}"  Style="{StaticResource iconContainer}">
                                        <materialDesign:PackIcon Kind="CogOutline" Style="{StaticResource icon}"/>
                                    </Border>

                                </StackPanel>
                            </ListViewItem>



                            <ListViewItem Height="60">
                                <StackPanel Orientation="Horizontal">
                                    <Border Background="{Binding Component._notificationPanelSignals.LightCurtain.Cyclic,Converter={plc:BooleanToBrushConverter}}"  Style="{StaticResource iconContainer}">
                                        <materialDesign:PackIcon Kind="Hand" Style="{StaticResource icon}"/>
                                    </Border>

                                </StackPanel>
                            </ListViewItem>



                            <ListViewItem Height="60">
                                <StackPanel Orientation="Horizontal">
                                    <Border Style="{StaticResource iconContainer}">
                                        <materialDesign:PackIcon Kind="HeartPulse" Style="{StaticResource icon}" Foreground="{Binding Component._heartBeat.Cyclic,Converter={plc:HeartBeatToBrushConverter}}"/>
                                    </Border>

                                </StackPanel>
                            </ListViewItem>
                        </ListView>
                    </StackPanel>
                 
                </Expander.Header>

                <ListView Margin="0,74,0,0"    Visibility="{Binding MenuVisibility}" ScrollViewer.HorizontalScrollBarVisibility="Auto" Grid.Row="1" Grid.Column="2" VerticalAlignment="Top"  Background="Transparent"   >
                    <ListView.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource OnPrimary}"></Setter>
                          
                        </Style>
                    </ListView.Resources>
                    <!--Control Voltage-->
                    <ListViewItem  Height="60">

                        <TextBlock VerticalAlignment="Center" Text="{x:Static s:NotificationPanel.ControlVoltage }" />
                    
                    </ListViewItem>

                    <!--Air Pressure-->
                    <ListViewItem Height="60">
                        <TextBlock Text="{x:Static s:NotificationPanel.AirPressure }"  />
                    </ListViewItem>

                    <!--Emergency Stop-->
                    <ListViewItem Height="60">

                            <TextBlock Text="{x:Static s:NotificationPanel.EmergencyStop }"  />
                
                    </ListViewItem>

                    <!--Safety Door Ok-->
                    <ListViewItem Height="60" >
                                    <TextBlock Text="{x:Static s:NotificationPanel.SafetyDoorOk }"  />
           
                    </ListViewItem>

                    <!--Door Closed-->
                    <ListViewItem Height="60">
                                    <TextBlock Text="{x:Static s:NotificationPanel.DoorClosed }"  />
         
                    </ListViewItem>

                    <!--Door Locked-->
                    <ListViewItem  Height="60">
         
                            <TextBlock Text="{x:Static s:NotificationPanel.DoorLocked }"  />

                    </ListViewItem>

                    <!--Automatic Mode-->
                        <ListViewItem Height="60">
                            <TextBlock Text="{x:Static s:NotificationPanel.AutomaticMode }"  />
                 
                    </ListViewItem>

                    <!--Process data-->
                    <ListViewItem  Height="60">
                             <TextBlock Text="{x:Static s:NotificationPanel.ProcessData }"  />
                   
                    </ListViewItem>
                    <!--Process data-->
                    <ListViewItem  Height="60">
                             <TextBlock Text="{x:Static s:NotificationPanel.TechnologyData }"  />
                  
                    </ListViewItem>

                    <!--Light Curtain-->
                    <ListViewItem  Height="60">
                                 <TextBlock Text="{x:Static s:NotificationPanel.LightCurtain }"  />
                  
                    </ListViewItem>



                    <!--Heart beat-->
                    <ListViewItem   Height="60">
                        <TextBlock Text="{x:Static s:NotificationPanel.HeartBeat }"  />
                    </ListViewItem>
                </ListView>

            </Expander>



        </materialDesign:Card>
    </Grid>
</UserControl>
